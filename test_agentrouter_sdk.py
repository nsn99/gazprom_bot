#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ AgentRouter SDK
"""

import asyncio
import json
from client import AgentRouter
from config import settings

async def test_agentrouter_sdk():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç—ã AgentRouter SDK"""
    print("üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ AgentRouter SDK...")
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–ª–∏–µ–Ω—Ç–∞
    client = AgentRouter(api_key=settings.agentrouter_api_key)
    
    # –¢–µ—Å—Ç 1: –ü—Ä–æ—Å—Ç–æ–π –≤–æ–ø—Ä–æ—Å
    print("\n1. –¢–µ—Å—Ç –ø—Ä–æ—Å—Ç–æ–≥–æ –≤–æ–ø—Ä–æ—Å–∞...")
    try:
        response = client.ask("–ü—Ä–∏–≤–µ—Ç, –∫–∞–∫ –¥–µ–ª–∞?", model=settings.agentrouter_model)
        print(f"‚úÖ –û—Ç–≤–µ—Ç: {response}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False
    
    # –¢–µ—Å—Ç 2: –°–ø–∏—Å–æ–∫ –º–æ–¥–µ–ª–µ–π
    print("\n2. –¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –º–æ–¥–µ–ª–µ–π...")
    try:
        models = client.list_models()
        print(f"‚úÖ –î–æ—Å—Ç—É–ø–Ω—ã–µ –º–æ–¥–µ–ª–∏: {models}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False
    
    # –¢–µ—Å—Ç 3: Chat —Å –∫–æ–Ω—Ç–µ–∫—Å—Ç–æ–º
    print("\n3. –¢–µ—Å—Ç chat —Å –∫–æ–Ω—Ç–µ–∫—Å—Ç–æ–º...")
    try:
        messages = [
            {"role": "system", "content": "–¢—ã - —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–π –∞–Ω–∞–ª–∏—Ç–∏–∫."},
            {"role": "user", "content": "–î–∞–π –∫—Ä–∞—Ç–∫—É—é —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—é –ø–æ –∞–∫—Ü–∏–∏ –ì–∞–∑–ø—Ä–æ–º –≤ —Ñ–æ—Ä–º–∞—Ç–µ JSON."}
        ]
        
        response = client.chat(
            messages=messages,
            model=settings.agentrouter_model,
            temperature=0.7,
            max_tokens=200
        )
        
        if hasattr(response, 'choices') and response.choices:
            content = response.choices[0].message.content
            print(f"‚úÖ –û—Ç–≤–µ—Ç: {content}")
            
            # –¢–æ–∫–µ–Ω—ã
            try:
                tokens = client.count_tokens(response)
                print(f"‚úÖ –¢–æ–∫–µ–Ω—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ: {tokens}")
            except Exception as e:
                print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø–æ–¥—Å—á–µ—Ç–∞ —Ç–æ–∫–µ–Ω–æ–≤: {e}")
        else:
            print("‚ùå –ù–µ—Ç –æ—Ç–≤–µ—Ç–∞")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False
    
    # –¢–µ—Å—Ç 4: –ü–æ—Ç–æ–∫–æ–≤—ã–π –æ—Ç–≤–µ—Ç
    print("\n4. –¢–µ—Å—Ç –ø–æ—Ç–æ–∫–æ–≤–æ–≥–æ –æ—Ç–≤–µ—Ç–∞...")
    try:
        print("AI –æ—Ç–≤–µ—á–∞–µ—Ç: ", end="")
        for chunk in client.stream("–ù–∞–ø–∏—à–∏ –∫–æ—Ä–æ—Ç–∫–æ–µ —Å—Ç–∏—Ö–æ—Ç–≤–æ—Ä–µ–Ω–∏–µ –æ –∫–æ–¥–µ", max_tokens=50):
            print(chunk, end="", flush=True)
        print()  # –ù–æ–≤–∞—è —Å—Ç—Ä–æ–∫–∞
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False
    
    print("\n‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã AgentRouter SDK –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
    return True

if __name__ == "__main__":
    asyncio.run(test_agentrouter_sdk())