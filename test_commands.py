#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–¢–µ—Å—Ç —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∫–æ–º–∞–Ω–¥ Telegram –±–æ—Ç–∞
"""

import asyncio
from telegram.ext import Application

from config import settings
from telegram_bot.bot import create_application


async def test_commands():
    """–¢–µ—Å—Ç —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∫–æ–º–∞–Ω–¥"""
    print("üîç –¢–µ—Å—Ç —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∫–æ–º–∞–Ω–¥ Telegram –±–æ—Ç–∞...")
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    application = create_application()
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –∫–æ–º–∞–Ω–¥
    print(f"‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–æ —É—Å–ø–µ—à–Ω–æ")
    
    # –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –∫–æ–º–∞–Ω–¥
    command_handlers = []
    for group_id, handler_group in application.handlers.items():
        print(f"üîç –ì—Ä—É–ø–ø–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ {group_id}:")
        for handler in handler_group:
            print(f"  - –¢–∏–ø –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞: {type(handler).__name__}")
            if hasattr(handler, 'command'):
                if isinstance(handler.command, list):
                    command_handlers.extend(handler.command)
                    print(f"    –ö–æ–º–∞–Ω–¥—ã: {handler.command}")
                else:
                    command_handlers.append(handler.command)
                    print(f"    –ö–æ–º–∞–Ω–¥–∞: {handler.command}")
            elif hasattr(handler, 'callback'):
                # –î–ª—è CommandHandler –≤ python-telegram-bot 20.x
                if hasattr(handler, 'commands'):
                    command_handlers.extend(handler.commands)
                    print(f"    –ö–æ–º–∞–Ω–¥—ã (–∞—Ç—Ä–∏–±—É—Ç): {handler.commands}")
    
    print(f"üìã –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã: {command_handlers}")
    print(f"üìä –í—Å–µ–≥–æ –∫–æ–º–∞–Ω–¥: {len(command_handlers)}")
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Å–Ω–æ–≤–Ω—ã—Ö –∫–æ–º–∞–Ω–¥
    required_commands = ['start', 'portfolio', 'recommend', 'execute', 'history', 'balance', 'help']
    missing_commands = [cmd for cmd in required_commands if cmd not in command_handlers]
    
    if missing_commands:
        print(f"‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –∫–æ–º–∞–Ω–¥—ã: {missing_commands}")
    else:
        print("‚úÖ –í—Å–µ –æ—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã")
    
    # –ó–∞–∫—Ä—ã—Ç–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    await application.shutdown()
    print("üîÑ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–æ")


if __name__ == "__main__":
    asyncio.run(test_commands())