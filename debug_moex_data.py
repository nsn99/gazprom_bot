#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –¥–∞–Ω–Ω—ã—Ö MOEX API –ø–æ GAZP
"""

import asyncio
import json
from datetime import datetime
from data.moex_client import MOEXClient


async def debug_moex_gazp():
    """–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –¥–∞–Ω–Ω—ã—Ö MOEX –ø–æ GAZP"""
    print("üîç –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ MOEX API –¥–ª—è GAZP...")
    
    async with MOEXClient() as moex:
        try:
            # 1. –¢–µ—Å—Ç L1 –¥–∞–Ω–Ω—ã—Ö
            print("\n1. üìä –¢–µ—Å—Ç L1 –¥–∞–Ω–Ω—ã—Ö:")
            l1_data = await moex.get_marketdata_l1("GAZP")
            print(f"   LAST: {l1_data.last}")
            print(f"   BID: {l1_data.bid}")
            print(f"   ASK: {l1_data.ask}")
            print(f"   VOLTODAY: {l1_data.voltoday}")
            print(f"   OPEN: {l1_data.open_price}")
            print(f"   HIGH: {l1_data.high}")
            print(f"   LOW: {l1_data.low}")
            
            # 2. –¢–µ—Å—Ç –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏—Ö —Å–≤–µ—á–µ–π
            print("\n2. üìà –¢–µ—Å—Ç –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏—Ö —Å–≤–µ—á–µ–π:")
            candles_df = await moex.get_historical_candles("GAZP", interval=1)
            if not candles_df.empty:
                print(f"   –ü–æ—Å–ª–µ–¥–Ω—è—è —Ü–µ–Ω–∞: {candles_df['close'].iloc[-1] if len(candles_df) > 0 else 'N/A'}")
                print(f"   –û–±—ä–µ–º: {candles_df['volume'].iloc[-1] if len(candles_df) > 0 else 'N/A'}")
                print(f"   High: {candles_df['high'].iloc[-1] if len(candles_df) > 0 else 'N/A'}")
                print(f"   Low: {candles_df['low'].iloc[-1] if len(candles_df) > 0 else 'N/A'}")
                print(f"   –í—Å–µ–≥–æ —Å–≤–µ—á–µ–π: {len(candles_df)}")
            else:
                print("   –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö —Å–≤–µ—á–µ–π")
            
            # 3. –¢–µ—Å—Ç —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏—Ö –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–æ–≤
            print("\n3. üìà –¢–µ—Å—Ç —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏—Ö –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–æ–≤:")
            indicators = await moex.get_technical_indicators("GAZP")
            if indicators:
                for key, value in indicators.items():
                    print(f"   {key}: {value}")
            else:
                print("   –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–æ–≤")
            
            # 4. –¢–µ—Å—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–µ
            print("\n4. ‚ÑπÔ∏è –¢–µ—Å—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–µ:")
            try:
                security_info = await moex.get_security_info("GAZP")
                print(f"   –ò–º—è: {security_info.shortname}")
                print(f"   –õ–æ—Ç: {security_info.lotsize}")
                print(f"   –°—Ç–∞—Ç—É—Å: {security_info.status}")
            except Exception as e:
                print(f"   –û—à–∏–±–∫–∞: {e}")
            
            # 5. –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—Ä–µ–º–µ–Ω–∏ —Ä–∞–±–æ—Ç—ã –±–∏—Ä–∂–∏
            print(f"\n5. ‚è∞ –¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")
            print("   –ü—Ä–æ–≤–µ—Ä–∫–∞, —Ä–∞–±–æ—Ç–∞–µ—Ç –ª–∏ –±–∏—Ä–∂–∞ –≤ —Ç–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è...")
            
            # 6. –¢–µ—Å—Ç —Ä–∞–∑–Ω—ã—Ö —ç–Ω–¥–ø–æ–∏–Ω—Ç–æ–≤
            print("\n6. üîó –¢–µ—Å—Ç —Ä–∞–∑–Ω—ã—Ö —ç–Ω–¥–ø–æ–∏–Ω—Ç–æ–≤:")
            
            # –¢–µ—Å—Ç –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —ç–Ω–¥–ø–æ–∏–Ω—Ç–∞
            try:
                main_url = "https://iss.moex.com/iss/engines/stock/markets/shares/boards/TQBR/securities/GAZP.json"
                async with moex.session.get(main_url) as response:
                    if response.status == 200:
                        data = await response.json()
                        print(f"   –û—Å–Ω–æ–≤–Ω–æ–π —ç–Ω–¥–ø–æ–∏–Ω—Ç —Å—Ç–∞—Ç—É—Å: {response.status}")
                        if 'marketdata' in data and 'data' in data['marketdata']:
                            market_data = data['marketdata']['data']
                            if market_data:
                                print(f"   –î–∞–Ω–Ω—ã–µ –Ω–∞–π–¥–µ–Ω—ã: {len(market_data)} –∑–∞–ø–∏—Å–µ–π")
                            else:
                                print("   –î–∞–Ω–Ω—ã–µ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
                        else:
                            print("   –ù–µ—Ç marketdata –≤ –æ—Ç–≤–µ—Ç–µ")
                    else:
                        print(f"   –û—Å–Ω–æ–≤–Ω–æ–π —ç–Ω–¥–ø–æ–∏–Ω—Ç –æ—à–∏–±–∫–∞: {response.status}")
            except Exception as e:
                print(f"   –û—Å–Ω–æ–≤–Ω–æ–π —ç–Ω–¥–ø–æ–∏–Ω—Ç –∏—Å–∫–ª—é—á–µ–Ω–∏–µ: {e}")
            
        except Exception as e:
            print(f"\n‚ùå –û–±—â–∞—è –æ—à–∏–±–∫–∞: {e}")
            import traceback
            traceback.print_exc()


if __name__ == "__main__":
    asyncio.run(debug_moex_gazp())