#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ–º–∞–Ω–¥—ã /analysis
"""

import asyncio
import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ Python path
sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))

from telegram_bot.bot import GazpromTelegramBot
from data.moex_client import MOEXClient
from portfolio.manager import PortfolioManager
from database.database import init_database


async def test_analysis_command():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã –∞–Ω–∞–ª–∏–∑–∞"""
    print("üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã /analysis...")
    
    try:
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
        await init_database()
        print("‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞")
        
        # –°–æ–∑–¥–∞–Ω–∏–µ —ç–∫–∑–µ–º–ø–ª—è—Ä–æ–≤
        bot = GazpromTelegramBot()
        moex_client = MOEXClient()
        portfolio_manager = PortfolioManager()
        
        # –¢–µ—Å—Ç–æ–≤—ã–π user_id (–º–æ–∂–Ω–æ –∑–∞–º–µ–Ω–∏—Ç—å –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π)
        test_user_id = 73097766
        
        print(f"üìä –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è user_id: {test_user_id}")
        
        # –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ—Ä—Ç—Ñ–µ–ª—è
        portfolio = await portfolio_manager.get_portfolio(test_user_id)
        if not portfolio:
            print("‚ùå –ü–æ—Ä—Ç—Ñ–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω")
            return
        
        print(f"üí∞ –ü–æ—Ä—Ç—Ñ–µ–ª—å –Ω–∞–π–¥–µ–Ω: cash={portfolio.current_cash}")
        
        # –ü–æ–ª—É—á–µ–Ω–∏–µ —Ä—ã–Ω–æ—á–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
        async with moex_client:
            current_price = await moex_client.get_current_price("GAZP")
            print(f"üíµ –¢–µ–∫—É—â–∞—è —Ü–µ–Ω–∞ GAZP: {current_price}")
            
            # –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏—Ö –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–æ–≤
            technical_indicators = await moex_client.get_technical_indicators("GAZP")
            print(f"üìà –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã: {technical_indicators}")
            
            # –ü–æ–ª—É—á–µ–Ω–∏–µ L1 –¥–∞–Ω–Ω—ã—Ö
            l1_data = await moex_client.get_marketdata_l1("GAZP")
            print(f"üìä L1 –¥–∞–Ω–Ω—ã–µ: last={l1_data.last}, voltoday={l1_data.voltoday}")
        
        # –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –¥–ª—è AI
        ai_context = await bot._prepare_ai_context(test_user_id, portfolio, current_price)
        print(f"ü§ñ –ö–æ–Ω—Ç–µ–∫—Å—Ç –¥–ª—è AI: {ai_context}")
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä—ã–Ω–æ—á–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ
        market_data = ai_context.get("market_data", {})
        print(f"\nüìä –†–´–ù–û–ß–ù–´–ï –î–ê–ù–ù–´–ï:")
        print(f"   –¢–µ–∫—É—â–∞—è —Ü–µ–Ω–∞: {market_data.get('current_price', 'N/A')}")
        print(f"   –û–±—ä–µ–º: {market_data.get('volume', 'N/A')}")
        print(f"   –ú–∞–∫—Å–∏–º—É–º –¥–Ω—è: {market_data.get('day_high', 'N/A')}")
        print(f"   –ú–∏–Ω–∏–º—É–º –¥–Ω—è: {market_data.get('day_low', 'N/A')}")
        print(f"   –¶–µ–Ω–∞ –æ—Ç–∫—Ä—ã—Ç–∏—è: {market_data.get('open_price', 'N/A')}")
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏—Ö –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–æ–≤
        tech_indicators = market_data.get("technical_indicators", {})
        print(f"\nüìà –¢–ï–•–ù–ò–ß–ï–°–ö–ò–ï –ò–ù–î–ò–ö–ê–¢–û–†–´:")
        print(f"   RSI: {tech_indicators.get('rsi', 'N/A')}")
        print(f"   MACD: {tech_indicators.get('macd', 'N/A')}")
        print(f"   SMA 20: {tech_indicators.get('sma_20', 'N/A')}")
        print(f"   SMA 50: {tech_indicators.get('sma_50', 'N/A')}")
        print(f"   –í–æ–ª–∞—Ç–∏–ª—å–Ω–æ—Å—Ç—å: {tech_indicators.get('volatility', 'N/A')}")
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞–Ω–Ω—ã—Ö –ø–æ—Ä—Ç—Ñ–µ–ª—è
        portfolio_data = ai_context.get("portfolio", {})
        print(f"\nüíº –î–ê–ù–ù–´–ï –ü–û–†–¢–§–ï–õ–Ø:")
        print(f"   –ù–∞–ª–∏—á–Ω—ã–µ: {portfolio_data.get('cash', 'N/A')}")
        print(f"   –ê–∫—Ü–∏–∏: {portfolio_data.get('shares', 'N/A')}")
        print(f"   –°—Ä–µ–¥–Ω—è—è —Ü–µ–Ω–∞: {portfolio_data.get('avg_price', 'N/A')}")
        print(f"   P&L: {portfolio_data.get('pnl', 'N/A')}")
        
        print("\n‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏: {e}")
        import traceback
        traceback.print_exc()


if __name__ == "__main__":
    asyncio.run(test_analysis_command())