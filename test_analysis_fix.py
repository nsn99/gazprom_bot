#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–π –∫–æ–º–∞–Ω–¥—ã /analysis
"""

import asyncio
import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø—Ä–æ–µ–∫—Ç–∞ –≤ –ø—É—Ç—å
sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))

from telegram_bot.bot import GazpromTelegramBot
from database.models import User, Portfolio
from config import settings


async def test_analysis_command():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã /analysis"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã /analysis...")
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞
    bot = GazpromTelegramBot()
    
    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    test_user_id = 123456789
    try:
        user = await bot.portfolio_manager.create_user(
            user_id=test_user_id,
            username="test_user",
            initial_capital=100000.0
        )
        print(f"‚úÖ –°–æ–∑–¥–∞–Ω —Ç–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user.id}")
    except Exception as e:
        print(f"‚ö†Ô∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏–ª–∏ –æ—à–∏–±–∫–∞: {e}")
        user = await bot.portfolio_manager.get_user_by_id(test_user_id)
    
    # –ü–æ–ª—É—á–∞–µ–º –ø–æ—Ä—Ç—Ñ–µ–ª—å
    portfolio = await bot.portfolio_manager.get_portfolio(test_user_id)
    if not portfolio:
        print("‚ùå –ü–æ—Ä—Ç—Ñ–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return
    
    print(f"‚úÖ –ü–æ—Ä—Ç—Ñ–µ–ª—å –Ω–∞–π–¥–µ–Ω: {portfolio.id}")
    
    # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â—É—é —Ü–µ–Ω—É
    try:
        async with bot.moex_client:
            current_price = await bot.moex_client.get_current_price("GAZP")
        print(f"‚úÖ –¢–µ–∫—É—â–∞—è —Ü–µ–Ω–∞ GAZP: {current_price}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ü–µ–Ω—ã: {e}")
        return
    
    # –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç –¥–ª—è AI
    try:
        ai_context = await bot._prepare_ai_context(test_user_id, portfolio, current_price)
        print("‚úÖ –ö–æ–Ω—Ç–µ–∫—Å—Ç –¥–ª—è AI –ø–æ–¥–≥–æ—Ç–æ–≤–ª–µ–Ω")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ä—ã–Ω–æ—á–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
        market_data = ai_context.get("market_data", {})
        print(f"üìä –†—ã–Ω–æ—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:")
        print(f"   - –¢–µ–∫—É—â–∞—è —Ü–µ–Ω–∞: {market_data.get('current_price')}")
        print(f"   - –û–±—ä–µ–º: {market_data.get('volume')}")
        print(f"   - –ú–∞–∫—Å–∏–º—É–º –¥–Ω—è: {market_data.get('day_high')}")
        print(f"   - –ú–∏–Ω–∏–º—É–º –¥–Ω—è: {market_data.get('day_low')}")
        
        technical_indicators = market_data.get("technical_indicators", {})
        print(f"üìà –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã:")
        print(f"   - RSI: {technical_indicators.get('rsi')}")
        print(f"   - MACD: {technical_indicators.get('macd')}")
        print(f"   - SMA 20: {technical_indicators.get('sma_20')}")
        print(f"   - SMA 50: {technical_indicators.get('sma_50')}")
        print(f"   - SMA 200: {technical_indicators.get('sma_200')}")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞: {e}")
        return
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ—á–∏—Å—Ç–∫—É Markdown
    test_text = "–≠—Ç–æ **—Ç–µ–∫—Å—Ç** —Å *—Ä–∞–∑–Ω—ã–º* <b>—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ–º</b> –∏ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–º–∏ <30). —Å–∏–º–≤–æ–ª–∞–º–∏"
    cleaned_text = bot._clean_markdown(test_text)
    print(f"üßπ –û—á–∏—Å—Ç–∫–∞ Markdown:")
    print(f"   –ò—Å—Ö–æ–¥–Ω—ã–π: {test_text}")
    print(f"   –û—á–∏—â–µ–Ω–Ω—ã–π: {cleaned_text}")
    
    print("‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã /analysis –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!")


if __name__ == "__main__":
    asyncio.run(test_analysis_command())